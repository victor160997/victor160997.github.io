{"ast":null,"code":"var _jsxFileName = \"/home/victor/\\xC1rea de Trabalho/my-pomodoro.app/src/components/Cronometro.jsx\";\nimport React, { Component } from 'react';\nimport PlaySound from './PlaySound';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cronometro extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pomodoro: {\n        timeWork: 25,\n        pausaCurta: 5,\n        paulaLonga: 10,\n        ciclos: 8\n      },\n\n      /* hours: 0, */\n      minutes: 24,\n      seconds: 45,\n      quantidadeCiclos: 1,\n      pausa: false\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState(prevState => ({\n        seconds: prevState.seconds + 1\n      }));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      pomodoro\n    } = prevProps;\n\n    if (prevState.seconds === 59) {\n      this.setState(prevState => ({\n        minutes: prevState.minutes + 1\n      }));\n      this.setState(prevState => ({\n        seconds: 0\n      }));\n    }\n\n    if (prevState.seconds === 59 && prevState.minutes === pomodoro.timeWork - 1) {\n      this.setState(prevState => ({\n        minutes: 0\n      }));\n      this.setState(prevState => ({\n        seconds: 0\n      }));\n      this.setState(prevState => ({\n        pausa: true\n      }));\n      this.setState(prevState => ({\n        quantidadeCiclos: prevState.quantidadeCiclos + 1\n      })); // this.setState((prevState) => ({hours: 1}));\n    } // if (prevState.hours === 23 && prevState.minutes === 59 && prevState.seconds === 59) {\n    //   this.setState((prevState) => ({minutes: 0}));\n    //   this.setState((prevState) => ({seconds: 0}));\n    //   this.setState((prevState) => ({hours: 0}));\n    // }\n\n\n    if (prevState.pausa === true && prevState.seconds === 59 && prevState.minutes === prevState.pomodoro.pausaCurta - 1) {\n      this.setState(prevState => ({\n        minutes: 0\n      }));\n      this.setState(prevState => ({\n        seconds: 0\n      }));\n      this.setState(prevState => ({\n        pausa: false\n      })); // this.setState((prevState) => ({hours: 1}));\n    }\n  }\n\n  render() {\n    const {\n      minutes,\n      seconds,\n      quantidadeCiclos,\n      pausa\n    } = this.state;\n    const {\n      pomodoro\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [minutes === pomodoro.timeWork - 1 && seconds > 50 ? /*#__PURE__*/_jsxDEV(PlaySound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 64\n      }, this) : '', pausa ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pausa curta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ciclo \", quantidadeCiclos]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [minutes < 10 ? 0 : '', minutes, \": \", seconds < 10 ? 0 : '', seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Tempo focado: \", pomodoro.timeWork]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Pausa curta: \", pomodoro.pausaCurta]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Pausa longa: \", pomodoro.pausaLonga]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Quantidade de ciclos: \", pomodoro.ciclos]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  pomodoro: state.time.time\n});\n\nexport default connect(mapStateToProps)(Cronometro);","map":{"version":3,"sources":["/home/victor/Área de Trabalho/my-pomodoro.app/src/components/Cronometro.jsx"],"names":["React","Component","PlaySound","connect","Cronometro","constructor","props","state","pomodoro","timeWork","pausaCurta","paulaLonga","ciclos","minutes","seconds","quantidadeCiclos","pausa","componentDidMount","setInterval","setState","prevState","componentDidUpdate","prevProps","render","pausaLonga","mapStateToProps","time"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PlaySound from './PlaySound'\nimport { connect } from 'react-redux';\n\nclass Cronometro extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pomodoro: {\n        timeWork: 25,\n        pausaCurta: 5,\n        paulaLonga: 10,\n        ciclos: 8,\n      },\n      /* hours: 0, */\n      minutes: 24,\n      seconds: 45,\n      quantidadeCiclos: 1,\n      pausa: false,\n    }\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState((prevState) => ({seconds: prevState.seconds + 1}))\n    }, 1000)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { pomodoro } = prevProps;\n    if (prevState.seconds === 59) {\n      this.setState((prevState) => ({minutes: prevState.minutes + 1}));\n      this.setState((prevState) => ({seconds: 0}));\n    }\n    if (prevState.seconds === 59 && prevState.minutes === pomodoro.timeWork - 1) {\n      this.setState((prevState) => ({minutes: 0}));\n      this.setState((prevState) => ({seconds: 0}));\n      this.setState((prevState) => ({pausa: true}));\n      this.setState((prevState) => ({quantidadeCiclos: prevState.quantidadeCiclos + 1}));\n      // this.setState((prevState) => ({hours: 1}));\n    }\n    // if (prevState.hours === 23 && prevState.minutes === 59 && prevState.seconds === 59) {\n    //   this.setState((prevState) => ({minutes: 0}));\n    //   this.setState((prevState) => ({seconds: 0}));\n    //   this.setState((prevState) => ({hours: 0}));\n    // }\n    if (prevState.pausa === true && prevState.seconds === 59 && prevState.minutes === prevState.pomodoro.pausaCurta - 1) {\n      this.setState((prevState) => ({minutes: 0}));\n      this.setState((prevState) => ({seconds: 0}));\n      this.setState((prevState) => ({pausa: false}));\n      // this.setState((prevState) => ({hours: 1}));\n    }\n  }\n\n  render() {\n    const { minutes, seconds, quantidadeCiclos, pausa } = this.state;\n    const { pomodoro } = this.props;\n    return (\n      <div>\n        { minutes === pomodoro.timeWork - 1  && seconds > 50 ? <PlaySound /> : ''}\n        { pausa ? <h1>Pausa curta</h1> : <h1>Ciclo { quantidadeCiclos }</h1>}\n        <h1>{ minutes < 10 ? 0 : ''}{ minutes }: { seconds < 10 ? 0 : ''}{ seconds }</h1>\n        <br />\n        <ul>\n          <li>Tempo focado: { pomodoro.timeWork }</li>\n          <li>Pausa curta: { pomodoro.pausaCurta }</li>\n          <li>Pausa longa: { pomodoro.pausaLonga }</li>\n          <li>Quantidade de ciclos: { pomodoro.ciclos }</li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  pomodoro: state.time.time,\n})\n\nexport default connect(mapStateToProps)(Cronometro)"]},"metadata":{},"sourceType":"module"}