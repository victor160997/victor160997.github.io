{"ast":null,"code":"var _jsxFileName = \"/home/victor/\\xC1rea de Trabalho/my-pomodoro.app/src/components/Cronometro.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Cronometro extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pomodoro: {\n        work: 25,\n        pausaCurta: 5,\n        paulaLonga: 10,\n        ciclos: 8\n      },\n\n      /* hours: 0, */\n      minutes: 24,\n      seconds: 50,\n      quantidadeCiclos: 1,\n      pausa: false\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState(prevState => ({\n        seconds: prevState.seconds + 1\n      }));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.seconds === 59) {\n      this.setState(prevState => ({\n        minutes: prevState.minutes + 1\n      }));\n      this.setState(prevState => ({\n        seconds: 0\n      }));\n    }\n\n    if (prevState.seconds === 59 && prevState.minutes === prevState.pomodoro.work - 1) {\n      this.setState(prevState => ({\n        minutes: 0\n      }));\n      this.setState(prevState => ({\n        seconds: 0\n      }));\n      this.setState(prevState => ({\n        pausa: true\n      }));\n      this.setState(prevState => ({\n        quantidadeCiclos: prevState.quantidadeCiclos + 1\n      })); // this.setState((prevState) => ({hours: 1}));\n    } // if (prevState.hours === 23 && prevState.minutes === 59 && prevState.seconds === 59) {\n    //   this.setState((prevState) => ({minutes: 0}));\n    //   this.setState((prevState) => ({seconds: 0}));\n    //   this.setState((prevState) => ({hours: 0}));\n    // }\n\n\n    if (prevState.pausa === true && prevState.seconds === 59 && prevState.minutes === prevState.pomodoro.pausaCurta - 1) {\n      this.setState(prevState => ({\n        minutes: 0\n      }));\n      this.setState(prevState => ({\n        seconds: 0\n      }));\n      this.setState(prevState => ({\n        pausa: false\n      })); // this.setState((prevState) => ({hours: 1}));\n    }\n  }\n\n  render() {\n    const {\n      minutes,\n      seconds,\n      quantidadeCiclos,\n      pausa\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [pausa ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Pausa curta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ciclo \", quantidadeCiclos]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [minutes, \": \", seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/victor/Área de Trabalho/my-pomodoro.app/src/components/Cronometro.jsx"],"names":["React","Component","Cronometro","constructor","props","state","pomodoro","work","pausaCurta","paulaLonga","ciclos","minutes","seconds","quantidadeCiclos","pausa","componentDidMount","setInterval","setState","prevState","componentDidUpdate","prevProps","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Cronometro extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pomodoro: {\n        work: 25,\n        pausaCurta: 5,\n        paulaLonga: 10,\n        ciclos: 8,\n      },\n      /* hours: 0, */\n      minutes: 24,\n      seconds: 50,\n      quantidadeCiclos: 1,\n      pausa: false,\n    }\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState((prevState) => ({seconds: prevState.seconds + 1}))\n    }, 1000)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.seconds === 59) {\n      this.setState((prevState) => ({minutes: prevState.minutes + 1}));\n      this.setState((prevState) => ({seconds: 0}));\n    }\n    if (prevState.seconds === 59 && prevState.minutes === prevState.pomodoro.work - 1) {\n      this.setState((prevState) => ({minutes: 0}));\n      this.setState((prevState) => ({seconds: 0}));\n      this.setState((prevState) => ({pausa: true}));\n      this.setState((prevState) => ({quantidadeCiclos: prevState.quantidadeCiclos + 1}));\n      // this.setState((prevState) => ({hours: 1}));\n    }\n    // if (prevState.hours === 23 && prevState.minutes === 59 && prevState.seconds === 59) {\n    //   this.setState((prevState) => ({minutes: 0}));\n    //   this.setState((prevState) => ({seconds: 0}));\n    //   this.setState((prevState) => ({hours: 0}));\n    // }\n    if (prevState.pausa === true && prevState.seconds === 59 && prevState.minutes === prevState.pomodoro.pausaCurta - 1) {\n      this.setState((prevState) => ({minutes: 0}));\n      this.setState((prevState) => ({seconds: 0}));\n      this.setState((prevState) => ({pausa: false}));\n      // this.setState((prevState) => ({hours: 1}));\n    }\n  }\n\n  render() {\n    const { minutes, seconds, quantidadeCiclos, pausa } = this.state;\n    return (\n      <div>\n        { pausa ? <p>Pausa curta</p> : <h1>Ciclo { quantidadeCiclos }</h1>}\n        <h1>{ minutes }: { seconds }</h1>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}